Parallel [P] & Serial [S] version available.

0. Image converter - How to use
It's possibile to convert an image or all the images in a folder to a different format. Use:

python image_converter.py <path_to_image or path_to_folder> <requested format (pnm, jpeg, png, ...)>

(<path_to_image>/.../<image_filename> must correspond to the image file name WITHOUT the EXTENSION)
(<requested_format> WITHOUT . in front)

Example
Convert images in input_images folder, located in the same directory of this file.

python3 src/image_converter.py input_images pnm

1. COMPILE:

g++ -g -Wall -fopenmp -o HoughTransform main.cpp src/*.cpp

2. EXECUTE:
(Remember to convert input images to .pnm format)

./HoughTransform <image-name>.pnm <config-file>.properties [parallel,serial]

Examples:
Execute the tranform on the bike image located inside input_images.
Use the properties defined in config.properties for the preprocessing and the Hough Transform.

[P] - ./HoughTransform input_images/bike_sample.pnm config.properties parallel
[S] - ./HoughTransform input_images/bike_sample.pnm config.properties serial

For the image specified, a folder with the same name is created in "output/".
In that folder are inserted all the intermediate processed images converted to .jpg format. 
As well as the Hough Transform result presented on a greyscale version of the original image.
Look at config.properties to adjust the output management, pre-processing and Hough Transform parameters.



NOTES:
To use a new image insert it into "input_images/" folder in .pnm format (or convert it to the requested .pnm format).
Images are uploaded in .jpg format to save space, convert them into .pnm format before using them.


CONFIGURATIONS FOR EACH IMAGE:

STANDARD HOUGH TRANSFORM (tr: 100, theta: 180)
IMAGES: rect_1, rect_2, rect_3

HT_version='probabilistic' or 'basic'
output_folder='output/'
output_format='jpg'
thread_count=12
greyscale_conversion=true
gaussian_blur=false
gb_kernel_size=5
gb_sigma=1.7
histogram_equalization=false
sobel_edge_detection=false
sed_threshold=160
sed_scale_factor=5
hough_vote_threshold=100
hough_theta=180
sobel_to_binary=false
samplig_rate=1

IMAGE: bike_sample

HT_version='basic'
output_folder='output/'
output_format='jpg'
thread_count=12
greyscale_conversion=true
histogram_equalization=true
gaussian_blur=true
gb_kernel_size=5
gb_sigma=1.7
restrict_colors=true
new_min=0
new_max=100
sobel_edge_detection=true
sed_threshold=160
sed_scale_factor=1
sed_to_binary=true
hough_vote_threshold=120
hough_theta=180
samplig_rate=2